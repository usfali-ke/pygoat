# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

trigger:
- master

pool:
  vmImage: ubuntu-latest

steps:
- task: Docker@0
  displayName: 'Build an image'
  inputs:
    containerregistrytype: 'Container Registry'
    dockerRegistryConnection: 'Docker-alienke'
    
- task: trivy@1
  inputs:
    version: 'latest'
    image: '$(Build.Repository.Name):$(Build.BuildId)'
    severities: 'CRITICAL,HIGH'
    ignoreUnfixed: true
  displayName: 'Container-scanning'
  continueOnError: true

- script: echo Running dependency-check.
    docker run --rm -v $(pwd):/src hysnsec/safety check -r /src/requirements.txt
  displayName: 'Run dependency-check'
  continueOnError: true
  

- script: |
    echo Add other tasks to build, test, and deploy your project.
    echo See https://aka.ms/yaml
  displayName: 'Run a multi-line script'

- script: |
    echo Running IaC.
    docker run --rm -w /src -v $(pwd):/src bridgecrew/checkov -d /src
  displayName: 'IaC - checkov'
  continueOnError: true

- script: |
    echo Running SAST.
    docker run --user $(id -u):$(id -g) -v $(pwd):/src --rm hysnsec/bandit -r /src
  displayName: 'SAST - Bandit'
  continueOnError: true

- script: |
    echo Running SAST.
    docker run --rm -e SNYK_TOKEN=$(SNYK_TOKEN) -v "$(pwd):/project" snyk/snyk-cli:docker code test --severity-threshold=high
  displayName: 'SAST - SNYK'
  continueOnError: true
  
