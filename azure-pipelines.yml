# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

trigger:
- master

pool:
  vmImage: ubuntu-latest

steps:
- task: Docker@0
  displayName: 'Build an image'
  inputs:
    containerregistrytype: 'Container Registry'
    dockerRegistryConnection: 'Docker-alienke'

- script: echo Container scanning.
    - docker run --rm -v /var/run/docker.sock:/var/run/docker.sock -v $HOME/Library/Caches:/root/.cache/ aquasec/trivy:0.47.0 image --ignore-unfixed --exit-code 0 --severity HIGH,CRITICAL $(Build.Repository.Name):$(Build.BuildId)
  displayName: 'Container-scanning'
  continueOnError: true

- script: echo Running dependency-check.
    docker run --rm -v $(pwd):/src hysnsec/safety check -r requirements.txt
  displayName: 'Run dependency-check'
  continueOnError: true
  

- script: |
    echo Add other tasks to build, test, and deploy your project.
    echo See https://aka.ms/yaml
  displayName: 'Run a multi-line script'

- script: |
    echo Running IaC.
    docker run --rm -w /src -v $(pwd):/src bridgecrew/checkov -d /src
  displayName: 'Run IaC - checkov'
  continueOnError: true

- script: |
    echo Running SAST.
    docker run --user $(id -u):$(id -g) -v $(pwd):/src --rm hysnsec/bandit -r /src
  displayName: 'Run SAST - Bandit'
  continueOnError: true
  
