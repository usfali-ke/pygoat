name: PyGoat CI Pipeline

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  security-checks:
    name: Security & Code Quality Checks
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'

      - name: Install Dependencies
        run: |
          python -m venv venv
          source venv/bin/activate
          pip install -r requirements.txt

      - name: Run Bandit Security Scan
        run: |
          source venv/bin/activate
          pip install bandit
          bandit -r pygoat/ -ll -ii

      - name: Run Snyk Code Security Scan
        uses: snyk/actions/python@master
        with:
          args: test --all-projects --severity-threshold=high
        env:
          SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}

      - name: Run Snyk Dependency Scan
        uses: snyk/actions/python@master
        with:
          args: test --file=requirements.txt --severity-threshold=high
        env:
          SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}

      - name: Run Dependency Security Scan
        run: |
          source venv/bin/activate
          pip install pip-audit
          pip-audit

      - name: Run Unit Tests
        run: |
          source venv/bin/activate
          pytest tests/

  build-and-push:
    name: Build & Push Docker Image
    runs-on: ubuntu-latest
    needs: security-checks
    if: github.ref == 'refs/heads/main'

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Define Image Tag
        run: echo "IMAGE_TAG=${{ github.run_number }}" >> $GITHUB_ENV

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: docker.io
          username: ${{ github.docker_user }}
          password: ${{ secrets.DOCKER_TOKEN }}

      - name: Build Docker Image
        run: |
          docker build -t ghcr.io/${{ github.repository_owner }}/pygoat:${{ env.IMAGE_TAG }} .

      - name: Scan Docker Image with Trivy
        uses: aquasecurity/trivy-action@master
        with:
          image-ref: 'ghcr.io/${{ github.repository_owner }}/pygoat:${{ env.IMAGE_TAG }}'
          format: 'table'
          exit-code: 1
          ignore-unfixed: true

      - name: Push Docker Image
        run: |
          docker push ghcr.io/${{ github.repository_owner }}/pygoat:${{ env.IMAGE_TAG }}
